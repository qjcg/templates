// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go istio.io/api/security/v1beta1

package v1beta1

// Action specifies the operation to take.
#AuthorizationPolicy_Action: int32 // #enumAuthorizationPolicy_Action

#enumAuthorizationPolicy_Action:
	#AuthorizationPolicy_ALLOW |
	#AuthorizationPolicy_DENY |
	#AuthorizationPolicy_AUDIT |
	#AuthorizationPolicy_CUSTOM

#values_AuthorizationPolicy_Action: {
	AuthorizationPolicy_ALLOW:  #AuthorizationPolicy_ALLOW
	AuthorizationPolicy_DENY:   #AuthorizationPolicy_DENY
	AuthorizationPolicy_AUDIT:  #AuthorizationPolicy_AUDIT
	AuthorizationPolicy_CUSTOM: #AuthorizationPolicy_CUSTOM
}

// Allow a request only if it matches the rules. This is the default type.
#AuthorizationPolicy_ALLOW: #AuthorizationPolicy_Action & 0

// Deny a request if it matches any of the rules.
#AuthorizationPolicy_DENY: #AuthorizationPolicy_Action & 1

// Audit a request if it matches any of the rules.
#AuthorizationPolicy_AUDIT: #AuthorizationPolicy_Action & 2

// The CUSTOM action allows an extension to handle the user request if the matching rules evaluate to true.
// The extension is evaluated independently and before the native ALLOW and DENY actions. When used together, A request
// is allowed if and only if all the actions return allow, in other words, the extension cannot bypass the
// authorization decision made by ALLOW and DENY action.
// Extension behavior is defined by the named providers declared in MeshConfig. The authorization policy refers to
// the extension by specifying the name of the provider.
// One example use case of the extension is to integrate with a custom external authorization system to delegate
// the authorization decision to it.
//
// Note: The CUSTOM action is currently an **alpha feature** and is subject to breaking changes in later versions.
//
// The following authorization policy applies to an ingress gateway and delegates the authorization check to a named extension
// "my-custom-authz" if the request path has prefix "/admin/".
//
// ```yaml
// apiVersion: security.istio.io/v1beta1
// kind: AuthorizationPolicy
// metadata:
//
// name: ext-authz
// namespace: istio-system
//
// spec:
//
// selector:
//   matchLabels:
//     app: istio-ingressgateway
// action: CUSTOM
// provider:
//   name: "my-custom-authz"
// rules:
// - to:
//   - operation:
//       paths: ["/admin/*"]
//
// ```
#AuthorizationPolicy_CUSTOM: #AuthorizationPolicy_Action & 3

// AuthorizationPolicy enables access control on workloads.
//
// <!-- crd generation tags
// +cue-gen:AuthorizationPolicy:groupName:security.istio.io
// +cue-gen:AuthorizationPolicy:version:v1beta1
// +cue-gen:AuthorizationPolicy:storageVersion
// +cue-gen:AuthorizationPolicy:annotations:helm.sh/resource-policy=keep
// +cue-gen:AuthorizationPolicy:labels:app=istio-pilot,chart=istio,istio=security,heritage=Tiller,release=istio
// +cue-gen:AuthorizationPolicy:subresource:status
// +cue-gen:AuthorizationPolicy:scope:Namespaced
// +cue-gen:AuthorizationPolicy:resource:categories=istio-io,security-istio-io,plural=authorizationpolicies
// +cue-gen:AuthorizationPolicy:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=security.istio.io/v1beta1
// +genclient
// +k8s:deepcopy-gen=true
// -->
#AuthorizationPolicy: _

_#isAuthorizationPolicy_ActionDetail: _

#AuthorizationPolicy_Provider: {
	// Specifies detailed configuration of the CUSTOM action. Must be used only with CUSTOM action.
	Provider?: null | #AuthorizationPolicy_ExtensionProvider @go(,*AuthorizationPolicy_ExtensionProvider) @protobuf(4,bytes,opt,name=provider,proto3,oneof)
}

// Rule matches requests from a list of sources that perform a list of operations subject to a
// list of conditions. A match occurs when at least one source, one operation and all conditions
// matches the request. An empty rule is always matched.
//
// Any string field in the rule supports Exact, Prefix, Suffix and Presence match:
//
// - Exact match: "abc" will match on value "abc".
// - Prefix match: "abc*" will match on value "abc" and "abcd".
// - Suffix match: "*abc" will match on value "abc" and "xabc".
// - Presence match: "*" will match when value is not empty.
#Rule: _

// Source specifies the source identities of a request. Fields in the source are
// ANDed together.
//
// For example, the following source matches if the principal is "admin" or "dev"
// and the namespace is "prod" or "test" and the ip is not "1.2.3.4".
//
// ```yaml
// principals: ["admin", "dev"]
// namespaces: ["prod", "test"]
// notIpBlocks: ["1.2.3.4"]
// ```
#Source: _

// Operation specifies the operations of a request. Fields in the operation are
// ANDed together.
//
// For example, the following operation matches if the host has suffix ".example.com"
// and the method is "GET" or "HEAD" and the path doesn't have prefix "/admin".
//
// ```yaml
// hosts: ["*.example.com"]
// methods: ["GET", "HEAD"]
// notPaths: ["/admin*"]
// ```
#Operation: _

// Condition specifies additional required attributes.
#Condition: _

#AuthorizationPolicy_ExtensionProvider: _

// From includes a list or sources.
#Rule_From: _

// To includes a list or operations.
#Rule_To: _
